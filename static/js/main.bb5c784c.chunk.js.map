{"version":3,"sources":["Componets/ContactForm/ContactForm.styled.jsx","Componets/ContactForm/ContactForm.jsx","Componets/ContactList/ContactList.styled.jsx","Componets/ContactList/ContactList.jsx","Componets/Filter/Filter.jsx","Componets/App.styled.jsx","Componets/App.jsx","index.js"],"names":["Form","styled","form","Input","input","Button","button","ContactForm","onAdd","useState","name","setName","number","setNumber","handleInputChange","e","target","value","reset","onSubmit","preventDefault","type","pattern","title","onChange","required","ContactList","contacts","onDeleteContact","length","map","contact","onClick","id","Filter","filter","autoComplete","Card","div","App","setContacts","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","findContacts","includes","className","shortid","generate","find","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb5c784c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  width: 50%;\r\n  :focus {\r\n    border: 3px solid #555;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  padding: 5px 10px;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  outline: none;\r\n  color: #fff;\r\n  background-color: #4caf50;\r\n  border: none;\r\n  border-radius: 15px;\r\n  box-shadow: 0 9px #999;\r\n\r\n  :hover {\r\n    background-color: #3e8e41;\r\n  }\r\n  :active {\r\n    background-color: #3e8e41;\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { Button } from './ContactForm.styled';\r\nimport { Input } from './ContactForm.styled';\r\nimport { Form } from './ContactForm.styled';\r\n\r\nexport default function ContactForm({ onAdd }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onAdd(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  padding: 5px 5px;\r\n  margin-left: 10px;\r\n  font-size: 10px;\r\n  width: 50px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  outline: none;\r\n  color: #fff;\r\n  background-color: #4caf50;\r\n  border: none;\r\n  border-radius: 15px;\r\n  /* box-shadow: 0 9px #999; */\r\n\r\n  :hover {\r\n    background-color: red;\r\n  }\r\n  :active {\r\n    background-color: red;\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from '../ContactList/ContactList.styled';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      {contacts.length > 0 ? (\r\n        <ul>\r\n          {contacts.map(contact => (\r\n            <li key={contact.id}>\r\n              <span>{contact.name}:</span>\r\n              <span>{contact.number}</span>\r\n              <Button onClick={() => onDeleteContact(contact.id)} type=\"button\">\r\n                Delete\r\n              </Button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Contact list is empty</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  //   onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Input } from '../ContactForm/ContactForm.styled';\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <>\r\n      Find contacts by name:\r\n      <Input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        autoComplete=\"off\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Card = styled.div`\r\n  width: 400px;\r\n  padding: 20px;\r\n  margin: 20px;\r\n  border: 1px solid black;\r\n`;\r\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from 'Componets/ContactForm/ContactForm';\nimport ContactList from 'Componets/ContactList/ContactList';\nimport Filter from 'Componets/Filter/Filter';\nimport { Card } from './App.styled';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleInputChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const addNewContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(prevState => prevState.id !== id));\n    setFilter('');\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const findContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <Card>\n      <h1 className=\"title\">Phonebook</h1>\n\n      <ContactForm onAdd={addNewContact} />\n\n      <h2 className=\"title\">Contacts</h2>\n\n      <Filter filter={filter} onChange={handleInputChange} />\n      <ContactList contacts={findContacts} onDeleteContact={deleteContact} />\n    </Card>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'Componets/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}